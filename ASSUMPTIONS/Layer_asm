Layer assumptions:
1)
each layer would be represented by 2 table lists.
the first list would contain only regular nodes. it would contain 5 table objects in the following order:
(pos,inc), (pos,dec), (neg,inc), (neg,dec), (unprocessed)
such that the first 4 table objects would not support deletion and the 5th would.

the second list would only arnodes. to preserve arnode assumption (2) it would contain 4 table objects
in the following order:
(pos,inc), (pos,dec), (neg,inc), (neg,dec)

each time a node would be inserted into the (pos,inc), (pos,dec), (neg,inc), (neg,dec) tables in the regular node
tables list, we will create a arnode which would contain it and insert it to the corresponding table in the
second table list.
those arnodes would be the only arnodes in the arnodes-tables

2)
the table number would correspond to the type of nodes it would contain
0 -> (pos,inc)
1 -> (pos,dec)
2 -> (neg,inc)
3 -> (neg,dec)
4 -> (unprocessed)

3)
all the edges would be added to the regular node before splitting it into the various type tables

4)
when a new node is created it would be added to the unprocessed table

5)
nodes can only be connected to nodes in adjacent layers

6)
only when a node is moved to the (pos,inc), (pos,dec), (neg,inc), (neg,dec) tables would it be set in stone.
it would never ve set in stone if its in the unprocessed table.

7)
-> Node assumptions (7)

8)
-> ARNode assumptions (8)

9)
for the first layer - i.e. a layer which has no previous layer,
we will arbitrarily decide that the nodes in it are pos-inc and would move them to the pos-inc table when the layer
is being preprocessed. this entails that their arnodes would also count as pos-inc.
for the last layer, in accordance to the paper, we catalog it as a pos-inc node

10)
-> Node assumptions (12)

11)
the input layer would never be fully activated.
the global data manager relies on this assumption.

12)
-> ARNode assumptions (13)

13)
no merge or split operations would be performed on the input or output layers

14)
the global ids of the output and input nodes will never change once given.
the global data manager relies on this
(this can also be inferred from assumption (12) and assumption (13))

Layer conclusions:
1)
since arnodes can only contain nodes which are set in stone, from assumption (6) we conclude that arnodes
can never contain unprocessed nodes.

2)
from conclusion (1) and ARNode assumption (5) we conclude that for a arnode to be forward activated,
all of its outgoing connections should be to arnodes which surround nodes which are not in the unprocessed table.
i.e. an arnode can never be forward activated if one of its outgoing connections is to a node which
is in the unprocessed table.
